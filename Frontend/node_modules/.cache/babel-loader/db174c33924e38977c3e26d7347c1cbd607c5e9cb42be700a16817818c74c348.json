{"ast":null,"code":"var _jsxFileName = \"/Users/shashankdubey/PDF2Quiz/Frontend/src/Quiz.js\",\n  _s = $RefreshSig$();\n// src/Quiz.js\nimport React, { useState, useEffect } from 'react';\nimport questionsData from './components/questions.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [selectedOptions, setSelectedOptions] = useState({});\n  const [score, setScore] = useState(null);\n  useEffect(() => {\n    setQuestions(questionsData);\n  }, []);\n  const handleCheckboxChange = (questionId, optionId) => {\n    setSelectedOptions(prevState => ({\n      ...prevState,\n      [questionId]: optionId\n    }));\n  };\n  const calculateScore = () => {\n    let score = 0;\n    questions.forEach(question => {\n      if (selectedOptions[question.question_id] === question.correct_option_id) {\n        score++;\n      }\n    });\n    setScore(score);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: question.question_text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), question.options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedOptions[question.question_id] === option.option_id,\n              onChange: () => handleCheckboxChange(question.question_id, option.option_id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 37\n            }, this), option.text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }, this)\n        }, option.option_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }, this))]\n      }, question.question_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => calculateScore(),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), score !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your score is: \", score, \" out of \", questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(Quiz, \"2itm1IcKntvfSoNzDiVVn5Xog3A=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","questionsData","jsxDEV","_jsxDEV","Quiz","_s","questions","setQuestions","selectedOptions","setSelectedOptions","score","setScore","handleCheckboxChange","questionId","optionId","prevState","calculateScore","forEach","question","question_id","correct_option_id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","question_text","options","option","type","checked","option_id","onChange","text","onClick","length","_c","$RefreshReg$"],"sources":["/Users/shashankdubey/PDF2Quiz/Frontend/src/Quiz.js"],"sourcesContent":["// src/Quiz.js\nimport React, { useState, useEffect } from 'react';\nimport questionsData from './components/questions.json';\n\nconst Quiz = () => {\n    const [questions, setQuestions] = useState([]);\n    const [selectedOptions, setSelectedOptions] = useState({});\n    const [score, setScore] = useState(null);\n\n    useEffect(() => {\n        setQuestions(questionsData);\n    }, []);\n\n    const handleCheckboxChange = (questionId, optionId) => {\n        setSelectedOptions(prevState => ({\n            ...prevState,\n            [questionId]: optionId\n        }));\n    };\n\n    const calculateScore = () => {\n        let score = 0;\n        questions.forEach(question => {\n            if (selectedOptions[question.question_id] === question.correct_option_id) {\n                score++;\n            }\n        });\n        setScore(score);\n    };\n\n    return (\n        <div>\n            <h2>Quiz</h2>\n            <form>\n                {questions.map(question => (\n                    <div key={question.question_id}>\n                        <h3>{question.question_text}</h3>\n                        {question.options.map(option => (\n                            <div key={option.option_id}>\n                                <label>\n                                    <input\n                                        type=\"checkbox\"\n                                        checked={selectedOptions[question.question_id] === option.option_id}\n                                        onChange={() => handleCheckboxChange(question.question_id, option.option_id)}\n                                    />\n                                    {option.text}\n                                </label>\n                            </div>\n                        ))}\n                    </div>\n                ))}\n            </form>\n            <button onClick={() => calculateScore()}>\n                Submit\n            </button>\n            {score !== null && (\n                <p>Your score is: {score} out of {questions.length}</p>\n            )}\n        </div>\n    );\n};\n\nexport default Quiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}